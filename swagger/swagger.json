{
  "openapi": "3.0.0",
  "info": {
    "title": "Exalent Benefits API",
    "version": "1.0.0",
    "description": "API documentation for Exalent Benefit operations"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [],
  "paths": {
    "/users": {                     
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": ["write:resource"]
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response for writing"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": ["read:resource"]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response for reading"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": ["read:resource"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": ["write:resource"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user-groups": {
      "post": {
        "summary": "Create a new user group",
        "tags": ["User Groups"],
        "security": [
          {
            "bearerAuth": ["write:resource"]
          }
        ],
        "requestBody": {
          "description": "User group object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User group created successfully"
          },
          "400": {
            "description": "Invalid UserGroupId"
          },
          "500": {
            "description": "Error creating user group",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error creating user group"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all user groups",
        "tags": ["User Groups"],
        "security": [
          {
            "bearerAuth": ["read:resource"]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response for reading user groups"
          },
          "500": {
            "description": "Error fetching user groups",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error fetching user groups"
                }
              }
            }
          }
        }
      }
    },
    "/user-groups/{id}": {
      "get": {
        "summary": "Get a user group by its ID",
        "tags": ["User Groups"],
        "security": [
          {
            "bearerAuth": ["read:resource"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user group to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User group retrieved successfully"
          },
          "404": {
            "description": "User group not found"
          }
        }
      },
      "put": {
        "summary": "Update a user group by its ID",
        "tags": ["User Groups"],
        "security": [
          {
            "bearerAuth": ["write:resource"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the user group to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user group object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User group updated successfully"
          },
          "404": {
            "description": "User group not found"
          }
        }
      }
    },
    "/roles": {
      "post": {
        "summary": "Create a new role",
        "tags": ["Roles"],
        "security": [
          {
            "bearerAuth": ["write:resource"]
          }
        ],
        "requestBody": {
          "description": "Role object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created successfully"
          },
          "400": {
            "description": "Invalid UserGroupId or RoleID already taken"
          },
          "500": {
            "description": "Error creating role",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error creating role"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all roles",
        "tags": ["Roles"],
        "security": [
          {
            "bearerAuth": ["read:resource"]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response for reading roles"
          },
          "500": {
            "description": "Error fetching roles",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error fetching roles"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "summary": "Get a role by its ID",
        "tags": ["Roles"],
        "security": [
          {
            "bearerAuth": ["read:resource"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the role to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "put": {
        "summary": "Update a role by its ID",
        "tags": ["Roles"],
        "security": [
          {
            "bearerAuth": ["write:resource"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the role to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated role object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/modules": {
      "post": {
        "summary": "Create a new module",
        "tags": ["Modules"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Module object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Module"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "400": {
            "description": "Invalid UserGroupID",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid UserGroupID"
                }
              }
            }
          },
          "500": {
            "description": "Error creating module",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error creating module"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all modules",
        "tags": ["Modules"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response for reading modules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Module"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching modules",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error fetching modules"
                }
              }
            }
          }
        }
      }
    },
    "/modules/{id}": {
      "get": {
        "summary": "Get a module by its ID",
        "tags": ["Modules"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the module to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Module retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "404": {
            "description": "Module not found"
          },
          "500": {
            "description": "Error fetching module",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error fetching module"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a module by its ID",
        "tags": ["Modules"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the module to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated module object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Module"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Module updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "500": {
            "description": "Error updating module",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error updating module"
                }
              }
            }
          }
        }
      },
          "/screens": {
            "post": {
              "summary": "Create a new screen",
              "tags": ["Screens"],
              "security": [
                {
                  "bearerAuth": ["write:resource"]
                }
              ],
              "requestBody": {
                "description": "Screen object",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Screen"
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "Screen created successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Screen"
                      }
                    }
                  }
                },
                "500": {
                  "description": "Error creating screen",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Error creating screen"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "summary": "Get all screens",
              "tags": ["Screens"],
              "responses": {
                "200": {
                  "description": "Successful response for reading screens",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Screen"
                        }
                      }
                    }
                  }
                },
                "500": {
                  "description": "Error fetching screens",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Error fetching screens"
                      }
                    }
                  }
                }
              }
            }
          },
          "/screens/{id}": {
            "get": {
              "summary": "Get a screen by its ID",
              "tags": ["Screens"],
              "parameters": [
                {
                  "in": "path",
                  "name": "id",
                  "description": "ID of the screen to retrieve",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Screen retrieved successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Screen"
                      }
                    }
                  }
                },
                "404": {
                  "description": "Screen not found"
                },
                "500": {
                  "description": "Error fetching screen",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Error fetching screen"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "summary": "Update a screen by its ID",
              "tags": ["Screens"],
              "parameters": [
                {
                  "in": "path",
                  "name": "id",
                  "description": "ID of the screen to update",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "requestBody": {
                "description": "Updated screen object",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Screen"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Screen updated successfully",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Screen"
                      }
                    }
                  }
                },
                "404": {
                  "description": "Screen not found"
                },
                "500": {
                  "description": "Error updating screen",
                  "content": {
                    "application/json": {
                      "example": {
                        "message": "Error updating screen"
                      }
                    }
                  }
                }
              }
            },
                "/userScreens": {
                  "get": {
                    "summary": "Get all screens displayed to the user ordered by module and screen",
                    "tags": ["UserScreens by modules and screens"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "useremail",
                        "description": "Email of the User to retrieve roles for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting user screens",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "Modules": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "ModuleID": { "type": "string" },
                                      "ModuleName": { "type": "string" },
                                      "ModuleIcon": { "type": "string" },
                                      "Screens": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "ScreenID": { "type": "string" },
                                            "ScreenName": { "type": "string" },
                                            "ScreenURL": { "type": "string" }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "User not found"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/roleByUserID": {
                  "get": {
                    "summary": "Get the role of a user by UserID",
                    "tags": ["Role by User"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "userid",
                        "description": "ID of the User to retrieve roles for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting user role",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "properties": {
                                "RoleID": { "type": "string" },
                                "RoleName": { "type": "string" }
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "User not found"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/rolesByUserGroup/{userGroupId}": {
                  "get": {
                    "summary": "Get roles by UserGroupID",
                    "tags": ["Role by UserGroup"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "userGroupId",
                        "description": "ID of the UserGroup to retrieve roles for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting roles by UserGroupID",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "RoleID": { "type": "string" },
                                  "RoleName": { "type": "string" }
                                }
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "No roles found for the specified UserGroupID"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/screenByModule/{moduleId}": {
                  "get": {
                    "summary": "Get screens by ModuleID",
                    "tags": ["Screens by Module"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "moduleId",
                        "description": "ID of the Module to retrieve screens for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting screens by ModuleID",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Screen"
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "No screens found for the specified ModuleID"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/userByUserGroupId/{userGroupId}": {
                  "get": {
                    "summary": "Get users by UserGroupID",
                    "tags": ["User by UserGroup"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "userGroupId",
                        "description": "ID of the UserGroup to retrieve users for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting users by UserGroupID",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/User"
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "No users found for the specified UserGroupID"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/moduleByUserGroupId/{userGroupId}": {
                  "get": {
                    "summary": "Get modules by UserGroupID",
                    "tags": ["Module by UserGroup"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "userGroupId",
                        "description": "ID of the UserGroup to retrieve modules for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting modules by UserGroupID",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/Module"
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "No modules found for the specified UserGroupID"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/userByRoleID/{roleId}": {
                  "get": {
                    "summary": "Get users by RoleID",
                    "tags": ["User By Role"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "parameters": [
                      {
                        "in": "path",
                        "name": "roleId",
                        "description": "ID of the Role to retrieve users for",
                        "required": true,
                        "schema": {
                          "type": "string"
                        }
                      }
                    ],
                    "responses": {
                      "200": {
                        "description": "Successful response for getting users by RoleID",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/User"
                              }
                            }
                          }
                        }
                      },
                      "404": {
                        "description": "No users found for the specified RoleID"
                      },
                      "500": {
                        "description": "Internal server error"
                      }
                    }
                  }
                },
                "/audit": {
                  "post": {
                    "summary": "Create a new audit",
                    "tags": ["Audits"],
                    "security": [
                      {
                        "bearerAuth": []
                      }
                    ],
                    "responses": {
                      "201": {
                        "description": "Audit created successfully",
                        "content": {
                          "application/json": {
                            "schema": {
                              "$ref": "#/components/schemas/auditSchema"
                            }
                          }
                        }
                      },
                      "500": {
                        "description": "Error creating module",
                        "content": {
                          "application/json": {
                            "example": {
                              "message": "Error creating module"
                            }
                          }
                        }
                      }
                    }
                  }
              }
            }
            
    }
  }
}
      

    